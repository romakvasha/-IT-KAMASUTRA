{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/myPosts/MyPosts.module.css","components/Profile/myPosts/Post/Post.module.css","components/Profile/myPosts/Post/Post.jsx","components/Profile/myPosts/MyPosts.jsx","components/Profile/myPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","item","message","likes","likesCount","className","s","src","MyPosts","React","memo","profilePage","MyPostsElement","postData","map","id","postsBlog","AddPostFormRedux","onSubmit","values","addNewPost","newPostBody","posts","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","dispatch","onAddPost","ProfileStatusHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","descriptionBlock","photos","large","alt","Profile","ProfileContainer","this","match","authorizedUserId","history","getUsersProfile","getStatus","userId","params","push","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c8eebae1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__1ou0p\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ugpSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlog\":\"MyPosts_postsBlog__26kS7\",\"posts\":\"MyPosts_posts__3skS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2IaeK\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  const { item } = props;\r\n  const { message, likesCount: likes } = item;\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://upload.wikimedia.org/wikipedia/en/8/86/Avatar_Aang.png\" />\r\n      {message}\r\n      <div>\r\n        <span> like {likes} </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/formsControls\";\r\n\r\nconst MyPosts = React.memo(({ profilePage, ...props }) => {\r\n  const MyPostsElement = profilePage.postData.map((item) => (\r\n    <Post item={item} key={item.id} />\r\n  ));\r\n\r\n  const addNewPost = (values) => {\r\n    props.addNewPost(values.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlog}>\r\n      <div>\r\n        <h3>My post</h3>\r\n        <div>\r\n          <AddPostFormRedux onSubmit={addNewPost} />\r\n        </div>\r\n      </div>\r\n      <div className={s.posts}>{MyPostsElement}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostBody\"\r\n          placeholder=\"Post message\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({ form: \"addPostForm\" })(AddPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { onAddPost, onPostChange } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewPost: (newPostBody) => {\r\n      dispatch(onAddPost(newPostBody));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusHook = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"not status\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatusHook;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusHook from \"./ProfileStatusHook\";\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div></div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} alt=\"ava\" />\r\n        <ProfileStatusHook status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = ({ profile, status, updateStatus }) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getUsersProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    const { match, authorizedUserId, history, getUsersProfile, getStatus } =\r\n      this.props;\r\n    let userId = match.params.userId;\r\n    if (!userId) {\r\n      userId = authorizedUserId;\r\n      if (!userId) {\r\n        history.push(\"/login\");\r\n      }\r\n    }\r\n    getUsersProfile(userId);\r\n    getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUsersProfile, getStatus, updateStatus }),\r\n  withRouter\r\n  //withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}