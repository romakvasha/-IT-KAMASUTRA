{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.module.css","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","item","img","name","id","path","DIALOGS","className","s","dialog","src","alt","to","activeClassName","active","Message","props","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","addMessage","messagesPage","dialogs","messages","dialogsElement","map","messagesElement","dialogsItems","values","newMessageBody","compose","connect","state","dispatch","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,SAAW,4B,oBCAjGD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,aAAe,kCAAkC,OAAS,8B,oHCkBlGC,EAdI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,EAAkBD,EAAlBC,IAAKC,EAAaF,EAAbE,KAAMC,EAAOH,EAAPG,GACbC,EAAI,UAAMC,IAAN,YAAiBF,GAE3B,OACE,sBAAKG,UAAWC,IAAEC,OAAlB,UACE,qBAAKC,IAAKR,EAAKS,IAAI,qDACnB,cAAC,IAAD,CAASC,GAAIP,EAAMQ,gBAAiBL,IAAEM,OAAtC,SACGX,QCJMY,EANC,SAACC,GAAW,IAClBf,EAASe,EAATf,KACAgB,EAAgBhB,EAAhBgB,QAAgBhB,EAAPG,GACjB,OAAO,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BQ,K,iCC2B9BC,EAAeC,YAAiB,KAoBhCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAnBL,SAACL,GAAW,IACzBO,EAAiBP,EAAjBO,aACR,OACE,uBAAMC,SAAUD,EAAhB,UACE,8BACE,cAACE,EAAA,EAAD,CACEC,UAAWC,IACXxB,KAAK,iBACLyB,YAAY,qBACZC,SAAU,CAACC,IAAUZ,OAGzB,8BACE,sDAUOa,EAjDC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WACTC,EADoC,8BACpCA,aACAC,EAAsBD,EAAtBC,QAASC,EAAaF,EAAbE,SACXC,EAAiBF,EAAQG,KAAI,SAACpC,GAAD,OACjC,cAAC,EAAD,CAAYA,KAAMA,GAAWA,EAAKG,OAG9BkC,EAAkBH,EAASE,KAAI,SAACpC,GAAD,OACnC,cAAC,EAAD,CAASA,KAAMA,GAAWA,EAAKG,OAOjC,OACE,sBAAKG,UAAWC,IAAE0B,QAAlB,UACE,qBAAK3B,UAAWC,IAAE+B,aAAlB,SAAiCH,IACjC,qBAAK7B,UAAWC,IAAE2B,SAAlB,SACE,8BAAMG,MAER,cAAClB,EAAD,CAAqBI,SAVH,SAACgB,GACrBR,EAAWQ,EAAOC,uB,kCCAPC,4BACbC,aAdsB,SAACC,GACvB,MAAO,CACLX,aAAcW,EAAMX,iBAGG,SAACY,GAC1B,MAAO,CACLb,WAAY,SAACS,GACXI,EAASb,YAAWS,SAOxBK,IAFaJ,CAGbX","file":"static/js/4.f4a1ab14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2sGmi\",\"dialog\":\"Dialogs_dialog__pJXzK\",\"messages\":\"Dialogs_messages__1YCsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__UIjs8\",\"dialogsItems\":\"DialogsItem_dialogsItems__22Ggh\",\"active\":\"DialogsItem_active__nMfwR\"};","import React from \"react\";\r\nimport s from \"./DialogsItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { DIALOGS } from \"../../NavBar/constats\";\r\n\r\nconst DialogItem = ({ item }) => {\r\n  const { img, name, id } = item;\r\n  const path = `${DIALOGS}/${id}`;\r\n\r\n  return (\r\n    <div className={s.dialog}>\r\n      <img src={img} alt=\"аватарка\" />\r\n      <NavLink to={path} activeClassName={s.active}>\r\n        {name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  const { item } = props;\r\n  const { message, id } = item;\r\n  return <div className={s.dialog}>{message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/formsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = ({ addMessage, ...props }) => {\r\n  const { messagesPage } = props;\r\n  const { dialogs, messages } = messagesPage;\r\n  const dialogsElement = dialogs.map((item) => (\r\n    <DialogItem item={item} key={item.id} />\r\n  ));\r\n\r\n  const messagesElement = messages.map((item) => (\r\n    <Message item={item} key={item.id} />\r\n  ));\r\n\r\n  const addNewMessage = (values) => {\r\n    addMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElement}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElement}</div>\r\n      </div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\nconst maxLength100 = maxLengthCreator(100);\r\nconst AddMessageForm = (props) => {\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n          validate={[required, maxLength100]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { addMessage } from \"../../redux/messages-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/wuthAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageBody) => {\r\n      dispatch(addMessage(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}